name: Successful Full Feature Build

on:
  workflow_dispatch:
    inputs:
      extra_packages:
        description: 'Additional packages'
        required: false
        default: 'luci-app-upnp luci-app-wol'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y wget build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc unzip python3

    - name: Download ImageBuilder
      run: |
        wget --timeout=60 --tries=3 https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-imagebuilder-23.05.3-mediatek-filogic.Linux-x86_64.tar.xz
        tar -xf openwrt-imagebuilder-23.05.3-mediatek-filogic.Linux-x86_64.tar.xz
        echo "✅ ImageBuilder 准备完成"

    - name: Build full featured firmware
      run: |
        cd openwrt-imagebuilder-23.05.3-mediatek-filogic.Linux-x86_64
        
        AVAILABLE_PROFILE=$(make info | grep "PROFILE_" | head -1 | cut -d'"' -f2)
        echo "使用设备配置: $AVAILABLE_PROFILE"
        
        # 基于成功经验的软件包组合
        BASE_PACKAGES="luci luci-compat luci-theme-argon"
        QOS_PACKAGES="luci-app-qos qos-scripts"
        # 先不包含复杂的内核模块，避免依赖问题
        # 这些可以在刷机后通过 opkg 安装
        
        echo "开始构建完整功能固件..."
        make image PROFILE="$AVAILABLE_PROFILE" \
          PACKAGES="$BASE_PACKAGES $QOS_PACKAGES ${{ github.event.inputs.extra_packages }}"
        
        echo "✅ 完整功能固件构建成功！"
        echo "生成的固件文件:"
        ls -la bin/targets/mediatek/filogic/

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-successful-build
        path: openwrt-imagebuilder-23.05.3-mediatek-filogic.Linux-x86_64/bin/targets/mediatek/filogic/*.bin
        retention-days: 30
